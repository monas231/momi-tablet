plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'com.google.gms.google-services'
    id 'dagger.hilt.android.plugin'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "kr.co.jness.momi.eclean"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 29
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("../keystore/eclean2021/eclean.keystore")
            storePassword "eclean2021"
            keyAlias "eclean2021"
            keyPassword "eclean2021"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'glide.pro', 'gson.pro', 'okhttp3.pro', 'okio.pro', 'retrofit2.pro'
            signingConfig signingConfigs.release
        }
        debug {
            resValue("string", "PORT_NUMBER", "8081")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled = true
    }

    flavorDimensions "version"

    productFlavors{
        flavorTTA {

            buildConfigField "String", "SERVER_URL", '"http://210.96.71.222/"'
        }
        flavorJNESS {
            buildConfigField "String", "SERVER_URL", '"https://ecln-smart-dev.jness.co.kr/"'
        }
    }
}

dependencies {

    // test
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation "androidx.room:room-testing:$versions.room_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin_version}"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle_version"
    implementation "androidx.fragment:fragment-ktx:$versions.fragment_ktx_version"
    implementation "androidx.work:work-runtime-ktx:$versions.work_version"

    implementation 'com.google.code.gson:gson:2.8.7'
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$versions.retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp_version"
    implementation "io.reactivex.rxjava3:rxjava:$versions.rxjava_version"
    implementation "io.reactivex.rxjava3:rxandroid:$versions.rxandroid_version"
    implementation "io.reactivex.rxjava3:rxkotlin:$versions.rxkotlin_version"
//    implementation "com.github.akarnokd:rxjava3-retrofit-adapter:3.0.0"

    // room
    kapt "androidx.room:room-compiler:$versions.room_version"
    implementation "androidx.room:room-runtime:$versions.room_version"
    implementation "androidx.room:room-ktx:$versions.room_version"
    implementation "androidx.room:room-rxjava3:$versions.room_version"

    implementation "com.trello.rxlifecycle4:rxlifecycle:$versions.rxlifecycle_version"
    implementation "com.trello.rxlifecycle4:rxlifecycle-components:$versions.rxlifecycle_version"
    implementation "com.trello.rxlifecycle4:rxlifecycle-kotlin:$versions.rxlifecycle_version"

    implementation "com.github.bumptech.glide:glide:$versions.glide_version"
    kapt "com.github.bumptech.glide:compiler:$versions.glide_version"

    implementation "com.jakewharton.rxbinding4:rxbinding:$versions.rxbinding_version"

    // hilt
    implementation "com.google.dagger:hilt-android:$versions.hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$versions.hilt_version"
    implementation "androidx.hilt:hilt-work:$versions.hilt_x_version"
    kapt "androidx.hilt:hilt-compiler:$versions.hilt_x_version"

    implementation platform("com.google.firebase:firebase-bom:$versions.firebase_version")
    implementation "com.google.firebase:firebase-messaging-ktx"
    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'

}

android.applicationVariants.all { variant ->
    variant.outputs.all { output ->
        def fileName = "eclean(${versionName})_${versionCode}_${variant.getFlavorName()}.apk"
        outputFileName = fileName
    }
}